_type: export
__export_format: 4
__export_date: 2022-08-31T16:49:25.752Z
__export_source: insomnia.desktop.app:v2022.5.1
resources:
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c305af69f3
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498011
    created: 1661959498011
    url: "{{ base_url }}/api/user/{{ username }}/"
    name: /api/user/{username}/
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959498011
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_665daa94f4d74c298bb130e3930161c3
    parentId: null
    modified: 1661928509875
    created: 1661928509875
    name: New Document
    description: ""
    scope: design
    _type: workspace
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c33d793515
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498010
    created: 1661959498010
    url: "{{ base_url }}/api/user/{{ username }}/"
    name: /api/user/{username}/
    description: ""
    method: POST
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959498010
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3759529bb
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498008
    created: 1661959498008
    url: "{{ base_url }}/api/user/{{ username }}/"
    name: /api/user/{username}/
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959498008
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c38c7f8011
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498007
    created: 1661959498007
    url: "{{ base_url }}/api/list/{{ username }}/"
    name: /api/list/{username}/
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959498007
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3afdfda41
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498005
    created: 1661959498005
    url: "{{ base_url }}/api/list/{{ username }}/"
    name: /api/list/{username}/
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "l_name": "Circle",
          "l_description": "Project Circle"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1661959498005
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3b7af5e21
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498003
    created: 1661959498003
    url: "{{ base_url }}/api/list/{{ username }}/{{ request_list }}/"
    name: /api/list/{username}/{request_list}/
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "l_name": "Around",
          "l_description": "Project Around"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1661959498003
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3b143a58c
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959498001
    created: 1661959498001
    url: "{{ base_url }}/api/list/{{ username }}/{{ request_list }}/"
    name: /api/list/{username}/{request_list}/
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959498001
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c37dc0d5d7
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497999
    created: 1661959497999
    url: "{{ base_url }}/api/card/{{ username }}/"
    name: /api/card/{username}/
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959497999
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c306c95c1a
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497997
    created: 1661959497997
    url: "{{ base_url }}/api/card/{{ username }}/{{ request_list }}/"
    name: /api/card/{username}/{request_list}/
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "c_title": "Notes",
          "c_content": "Have to finish the notes",
          "c_deadline": "2022-10-01",
          "c_doneornot": "0"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1661959497997
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c30a24d993
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497994
    created: 1661959497994
    url: "{{ base_url }}/api/card/{{ username }}/{{ request_list }}/{{ request_card
      }}/"
    name: /api/card/{username}/{request_list}/{request_card}/
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "list": "Around",
          "c_title": "Notes",
          "c_content": "Have to finish the notes",
          "c_deadline": "2022-10-01",
          "c_doneornot": "0"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1661959497994
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3db615cd7
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497992
    created: 1661959497992
    url: "{{ base_url }}/api/card/{{ username }}/{{ request_list }}/{{ request_card
      }}/"
    name: /api/card/{username}/{request_list}/{request_card}/
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959497992
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3040da9bf
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497989
    created: 1661959497989
    url: "{{ base_url }}/api/m_a_c_o_l/{{ username }}/{{ request_list }}/{{
      form_list }}/"
    name: /api/m_a_c_o_l/{username}/{request_list}/{form_list}/
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959497989
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3cbbc5791
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497986
    created: 1661959497986
    url: "{{ base_url }}/api/summary/{{ username }}/"
    name: /api/summary/{username}/
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959497986
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_665daa94f4d74c298bb130e3930161c3349e6ec2
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661959497982
    created: 1661959497982
    url: "{{ base_url }}/api/summary/{{ username }}/"
    name: /api/summary/{username}/
    description: ""
    method: POST
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661959497983
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e86829b12e8f4d9690b01f695eee1ac3
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661928509923
    created: 1661928509923
    url: ""
    name: New Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1661928509923
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_271ae00b5f299f67cded7b374a3a6f9106501d3e
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661928509910
    created: 1661928509910
    name: Base Environment
    data: {}
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1661928509910
    _type: environment
  - _id: jar_271ae00b5f299f67cded7b374a3a6f9106501d3e
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661928509916
    created: 1661928509916
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_0c8803fe35684d7693574facac1160a9
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661963074024
    created: 1661928509900
    fileName: New Document
    contents: >-
      openapi: 3.0.0

      info:
        title: The KANBAN Application
        version: 1.0.0
        description: |
          Documentation example. You can add various kinds of **documentation** here. It takes both markdown and HTML.
          <h2>ER Diagram</h2>
          <h2> Error Codes <_type: export/h2>  <table>
            <thead>
              <th>Resource</th>
              <th>Error Code</th>
              <th>Message</th>
            </thead>
            <tbody>
            <tr>
              <td>Resource</td>
              <td>Error Code</td>
              <td>Message</td>
            </tr>
            </tbody>
          </table>
      servers:
        - url: http://localhost:5000/
      paths:
        /api/user/{username}/:
          description: >-
            End point to read, update and delete a user_name.
          get:
            description: To check wether user_name is there in DB or not.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: User_name is not there in DB.
              '290':
                description: User_name is there in DB.
          post:
            description: To add user_name in DB.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: User_name is already there in DB.
              '290':
                description: User_name is successfully added in DB.
          delete:
            description: To delete user_name from the DB.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: Request user_name does not exist.
              '290':
                description: User is successfully deleted.
        /api/list/{username}/:
          description: To retrive lists and add list.
          get:
            description: To retrive all list of a user.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: Request user_name does not exist.
              '290':
                description: Lists are successfully retrieved.
          post:
            description: To add list in a user.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            requestBody:
              content:
                application/json:
                  schema:
                    title: user object
                    type: object
                    properties:
                      l_name:
                        type: string
                        example: Circle
                      l_description:
                        type: string
                        example: Project Circle
            responses:
              '230':
                description: Request user does not exist.
              '231':
                description: l_name already exists.
              '232':
                description: You can not added space in l_name.
              '290':
                description: List is successfully added.
        /api/list/{username}/{request_list}/:
          description: To update and delete list.
          put:
            description: To update list.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
            requestBody:
              content:
                application/json:
                  schema:
                    title: user object
                    type: object
                    properties:
                      l_name:
                        type: string
                        example: Around
                      l_description:
                        type: string
                        example: Project Around
            responses:
              '230':
                description: Request user does not exist.
              '231':
                description: Request list does not exist.
              '232':
                description: l_name already exists.
              '233':
                description: You can not added space in l_name.
              '290':
                description: List is successfully added.
          delete:
            description: Delete list & all its card/s.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
            responses:
              '230':
                description: Request user does not exist.
              '231':
                description: Request list does not exist.
              '290':
                description: List is successfully added.
        /api/card/{username}/:
          description: Retrieve all cards of a user.
          get:
            description: To retrive all cards of a user.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: Request user_name does not exist.
              '290':
                description: Cards are successfully retrieved.
        /api/card/{username}/{request_list}/:
          post:
            description: To add card in a list.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
            requestBody:
              content:
                application/json:
                  schema:
                    title: user object
                    type: object
                    properties:
                      c_title:
                        type: string
                        example: Notes
                      c_content:
                        type: string
                        example: Have to finish the notes
                      c_deadline:
                        type: string
                        example: 2022-10-01
                      c_doneornot:
                        type: string
                        example: "0"                
            responses:
              '230':
                description: Request user does not exist.
              '231':
                description: l_name does not exists.
              '232':
                description: Card title already exist.
              '233':
                description: c_deadline(card deadline) can not be earlier than todays.
              '290':
                description: Card is successfully created.
        /api/card/{username}/{request_list}/{request_card}/:
          put:
            description: To update a card details including transfering the card to any other list the user has.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
              - in: path
                name: request_card
                required: true
                schema:
                  type: string
                  example: Notes
            requestBody:
              content:
                application/json:
                  schema:
                    title: user object
                    type: object
                    properties:
                      list:
                        type: string
                        example: Around
                      c_title:
                        type: string
                        example: Notes
                      c_content:
                        type: string
                        example: Have to finish the notes
                      c_deadline:
                        type: string
                        example: 2022-10-01
                      c_doneornot:
                        type: string
                        example: "0"                
            responses:
              '230':
                description: username does not exist.
              '231':
                description: request_name does not exists.
              '232':
                description: request_card is not in the DB.
              '233':
                description: c_title already exist.
              '234':
                description: c_deadline(card deadline) can not be earlier than todays.
              '290':
                description: Card is successfully updated.
          delete:
            description: To delete a card.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
              - in: path
                name: request_card
                required: true
                schema:
                  type: string
                  example: Notes
            responses:
              '230':
                description: username does not exist.
              '231':
                description: request_name does not exists.
              '232':
                description: request_card is not in the DB.
              '290':
                description: Card is successfully updated.
        /api/m_a_c_o_l/{username}/{request_list}/{form_list}/:
          get:
            description: To retrive all cards of a user.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
              - in: path
                name: request_list
                required: true
                schema:
                  type: string
                  example: Circle
              - in: path
                name: form_list
                required: true
                schema:
                  type: string
                  example: The_book
            responses:
              '230':
                description: username does not exist.
              '231':
                description: request_list does not exist.
              '232':
                description: IN THE LIST YOU WANT TO TRANSFER THE ALL CARDS(form_list), DOES NOT EXIST.
              '233':
                description: Some card/s of request_list is/are present in the form_list
              '290':
                description: Cards has been successfully transferred to the forem_list and request_list is successfully deleted.
        /api/summary/{username}/:
          description: >-
            To generate summary and to generate and store pictures of trendlines and delete the existing for the same list.
          get:
            description: To generate and get the summary data.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: username is not there in DB.
              '290':
                description: The summary has been calculated and retrieved.
          post:
            description: To generate and store the trendlines(pictorial representation of the summary) in static form.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: Chandresh
            responses:
              '230':
                description: username is not there in DB.
              '290':
                description: The trendlines are generated and stored in the folder.
    contentType: yaml
    _type: api_spec
  - _id: uts_51c72791cd6e4d5880e89014a0a0a309
    parentId: wrk_665daa94f4d74c298bb130e3930161c3
    modified: 1661928509925
    created: 1661928509925
    name: Example Test Suite
    _type: unit_test_suite
  - _id: env_env_271ae00b5f299f67cded7b374a3a6f9106501d3e_sub
    parentId: env_271ae00b5f299f67cded7b374a3a6f9106501d3e
    modified: 1661959498014
    created: 1661959498014
    name: OpenAPI env
    data:
      scheme: http
      base_path: ""
      host: localhost:5000
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1661959498014
    _type: environment
